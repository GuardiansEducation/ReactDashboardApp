name: Build Lambdas

on:
  push:
    branches:
      - master
    paths:
      - lambdas/proxy/**
  pull_request:
    branches:
      - master
    paths:
      - lambdas/proxy/**

env:
  proxyLambdaName: apiProxyLambda.zip
  functionName: apiProxy
  lambdasBucket: d-lambdas

jobs:
  build:
    defaults:
      run:
        working-directory: ./lambdas/proxy
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository (latest version)
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js (latest version)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22 # Use the latest LTS or a version compatible with your project
          cache: "npm"

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Zip lambda function
      - name: Create lambda zip file
        run: |
          zip -r ${{ env.proxyLambdaName }} .

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Load lambda zip to s3
      - name: Deploy to S3
        run: |
          SOURCE="${{ env.proxyLambdaName }}"
          DEST="s3://${{ env.lambdasBucket }}/${{ env.proxyLambdaName }}"

          echo "Purging destination folder..."
          aws s3 rm $DEST

          echo "Copying new files..."
          aws s3 cp $SOURCE $DEST

      # Update lambda code
      - name: Update lambda code
        run: |
          aws lambda update-function-code --function-name ${{ env.functionName }} --s3-bucket ${{ env.lambdasBucket }} --s3-key ${{ env.proxyLambdaName }}
